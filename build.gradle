import com.android.build.gradle.BasePlugin

buildscript { scriptHandler ->
    apply from: 'repositories.gradle',
            to: scriptHandler

    ext.buildConfig = [
            applicationId: "com.droibit.looking2",
            compileSdk: 29,
            targetSdk : 29,
            minSdk    : 24,
            version   : [
                    'major': 1,
                    'minor': 0,
                    'patch': 1,
                    'build': 0,
            ]
    ]
    ext.buildConfig.version['name'] = "${buildConfig.version.major}.${buildConfig.version.minor}.${buildConfig.version.patch}"
    ext.buildConfig.version['fullName'] = "${buildConfig.version.name}.${buildConfig.version.build}"
    ext.buildConfig.version['code'] = buildConfig.version.major * 1000000 + buildConfig.version.minor * 10000 + buildConfig.version.patch * 100 + buildConfig.version.build

    apply from: rootProject.file('dependencies.gradle')

    repositories {
        google()
        jcenter()
        gradlePluginPortal()
    }

    dependencies {
        classpath deps.plugin.buildTools
        classpath deps.plugin.kotlin
        classpath deps.plugin.googleServices
        classpath deps.plugin.crashlytics
        classpath deps.plugin.ktlint
        classpath deps.plugin.ossLicense
        classpath deps.plugin.navSafeArgs
        classpath deps.plugin.gradleVersions
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    buildscript {
        apply from: rootProject.file('repositories.gradle')
    }

    apply plugin: 'org.jlleitschuh.gradle.ktlint'

    plugins.whenPluginAdded { plugin ->
        if (plugin instanceof BasePlugin) {
            android {
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }

                lintOptions {
                    textReport true
                    textOutput 'stdout'
                    lintConfig rootProject.file('lint.xml')

                    checkDependencies true
                    checkTestSources true
                    explainIssues false

                    // We run a full lint analysis as build part in CI, so skip vital checks for assemble task.
                    checkReleaseBuilds false
                }
            }

            ktlint {
                android = true
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinCompile).configureEach { task ->
        task.kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += [
                    '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
                    '-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi',
                    '-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi',
                    '-Xuse-experimental=kotlin.time.ExperimentalTime',
                    '-Xinline-classes'
            ]
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
