apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: "com.github.ben-manes.versions"

apply from: rootProject.file('dependencies_shared.gradle')

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId buildConfig.applicationId
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode buildConfig.version.code
        versionName buildConfig.version.name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "en", "ja"
        vectorDrawables.useSupportLibrary = true
        // ref. https://developer.android.com/training/wearables/apps/packaging.html#migrating
        wearAppUnbundled true

        buildConfigField("String", "PACKAGE_NAME", "\"${buildConfig.applicationId}\"")
    }

    dataBinding {
        enabled true
    }

    buildTypes {
        debug {
            // ref. https://developer.android.com/studio/build/optimize-your-build.html#disable_crashlytics
            ext.alwaysUpdateBuildId = false
            applicationIdSuffix '.debug'
            versionNameSuffix '.debug'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            storeFile rootProject.file('keystore/debug.keystore')
        }
    }

    packagingOptions {
        exclude 'kotlin/**'
        exclude '**/*.kotlin_metadata'
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/*.version'
    }

    dynamicFeatures = [":account", ":home", ":timeline", ":settings", ":tweet"]
}

configurations.all {
    exclude group: 'androidx.appcompat', module: 'appcompat'
}

dependencies {
    implementation project(':core')

    implementation deps.androidx.work
    kapt deps.dagger.compiler

    implementation(deps.crashlytics) {
        transitive = true
    }

    testImplementation deps.robolectric
}

kapt {
    useBuildCache = true
}

// Must be applied after dependencies. See https://stackoverflow.com/a/38018985
apply plugin: 'com.google.gms.google-services'
